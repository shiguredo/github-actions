name: Test Download OpenH264 Action

on:
  push:
    paths:
      - '.github/actions/download-openh264/**'
      - '.github/workflows/test-download-openh264.yml'
  pull_request:
    paths:
      - '.github/actions/download-openh264/**'
      - '.github/workflows/test-download-openh264.yml'
  workflow_dispatch:

jobs:
  test:
    name: Test - ${{ matrix.platform }} - OpenH264 ${{ matrix.openh264_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu 24.04 x86_64
          - os: ubuntu-24.04
            platform: ubuntu-24.04_x86_64
            openh264_version: "2.6.0"
            expected_lib: libopenh264.so
          
          # Ubuntu 22.04 x86_64
          - os: ubuntu-22.04
            platform: ubuntu-22.04_x86_64
            openh264_version: "2.6.0"
            expected_lib: libopenh264.so
          
          # Ubuntu ARM64 (self-hosted runner が必要な場合はコメントアウト)
          # - os: ubuntu-latest
          #   platform: ubuntu-24.04_armv8
          #   openh264_version: "2.6.0"
          #   expected_lib: libopenh264.so
          
          # macOS ARM64
          - os: macos-latest
            platform: macos_arm64
            openh264_version: "2.6.0"
            expected_lib: libopenh264.dylib
          
          # Windows x86_64
          - os: windows-latest
            platform: windows_x86_64
            openh264_version: "2.6.0"
            expected_lib: libopenh264.dll
          
          # 異なるバージョンのテスト
          - os: ubuntu-24.04
            platform: ubuntu-24.04_x86_64
            openh264_version: "2.5.0"
            expected_lib: libopenh264.so
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Test Download OpenH264 Action
        id: download
        uses: ./.github/actions/download-openh264
        with:
          platform_name: ${{ matrix.platform }}
          openh264_version: ${{ matrix.openh264_version }}
          use-cache: 'false'
      
      - name: Verify library exists (Ubuntu/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Checking for library: ${{ matrix.expected_lib }}"
          if [ ! -f "${{ matrix.expected_lib }}" ]; then
            echo "Error: Library file not found in working directory"
            exit 1
          fi
          echo "Library found in working directory"
          
          echo "Checking output path: ${{ steps.download.outputs.openh264_path }}"
          if [ ! -f "${{ steps.download.outputs.openh264_path }}" ]; then
            echo "Error: Library file not found at output path"
            exit 1
          fi
          echo "Library found at output path"
          
          # ファイル情報を表示
          ls -la "${{ matrix.expected_lib }}"
          file "${{ matrix.expected_lib }}"
      
      - name: Verify library exists (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "Checking for library: ${{ matrix.expected_lib }}"
          if (-not (Test-Path "${{ matrix.expected_lib }}")) {
            Write-Host "Error: Library file not found in working directory"
            exit 1
          }
          Write-Host "Library found in working directory"
          
          Write-Host "Checking output path: ${{ steps.download.outputs.openh264_path }}"
          if (-not (Test-Path "${{ steps.download.outputs.openh264_path }}")) {
            Write-Host "Error: Library file not found at output path"
            exit 1
          }
          Write-Host "Library found at output path"
          
          # ファイル情報を表示
          Get-Item "${{ matrix.expected_lib }}" | Format-List